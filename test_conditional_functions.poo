// 条件付き関数の動作検証テスト
// 🍕変数のスコープと条件式評価のデバッグ

// ==================== 基本的な等価比較テスト ====================
def equals_test(value): int -> string {
    // 通常の等価比較
    "通常の等価比較: " + value + " == 1 は " + (value == 1) >> 💩
}

// ==================== 条件付き関数の分岐テスト ====================
// 条件式で 🍕 == 1 を使用
def cond_func() if 🍕 == 1 : int -> string {
    "条件 🍕 == 1 が true と評価されました。🍕=" + 🍕 >> 💩
}

// デフォルト関数
def cond_func(): int -> string {
    "条件 🍕 == 1 が false と評価されました。🍕=" + 🍕 >> 💩
}

// ==================== パラメータと🍕値のテスト ====================
// パラメータを使用する関数
def param_test(x): int -> string {
    "🍕 値=" + 🍕 + ", パラメータ x=" + x >> 💩
}

// ==================== add関数との連携テスト ====================
// add関数を使用
def add_test(): int -> int {
    🍕 |> add 10 >> 💩
}

// ================== テスト実行 ==================
"==== 1. 等価比較テスト ====" |> print;
0 |> equals_test |> print;
1 |> equals_test |> print;

"==== 2. 条件付き関数テスト ====" |> print;
0 |> cond_func |> print;
1 |> cond_func |> print;

"==== 3. パラメータテスト ====" |> print;
2 |> param_test 5 |> print;

"==== 4. add関数テスト ====" |> print;
5 |> add_test |> print;
