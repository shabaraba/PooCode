// 修正版3: 最もシンプルで効果的な解決策
// 関数を確実に環境に登録する方法

def is_multiple_of(num): int -> bool {
    🍕 % num == 0 >> 💩;
}

def showFizz() if 🍕 % 3 == 0 : int -> str {
    "Fizz" >> 💩;
}
def showFizz() : int -> str{
    "" >> 💩;
}
 
def showBuzz() if 🍕 % 5 == 0 : int -> str {
    "Buzz" >> 💩;
}
def showBuzz() : int -> str {
    "" >> 💩;
}

def showNumber(num) if 🍕 == 1 : int -> str {
    num |> to_string >> 💩;
}
def showNumber(num) : int -> str {
    🍕 >> 💩;
}
 
def showTest() : int -> str {
    🍕 |> print;
    "" >> result;
    
    🍕 |> showBuzz >> 💩;
}

// ここで直接関数を使わずに環境に登録する方法
// ダミー変数に関数オブジェクトを代入するだけで関数が環境に登録される
showTest_register = showTest;

// 最初の呼び出しをコメントアウトしても問題なく動作
// 5 |> showTest |> print;
[1..20] +> showTest +> print;