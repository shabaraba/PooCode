// test_pipe_operators.poo - 拡張パイプ演算子のテスト

// 配列を作成
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10] >> numbers
"配列を作成しました: " + numbers |> print

// 条件関数を定義
def is_even() : int -> bool {
    🍕 % 2 == 0 >> 💩
}

// map演算子をパイプとして使用
numbers map is_even >> results
"map演算子のテスト: " + results |> print

// 偶数のみをフィルタリング
numbers filter is_even >> evens
"filter演算子のテスト: " + evens |> print

// 引数付き関数を定義
def multiply(factor) : int -> int {
    🍕 * factor >> 💩
}

// 引数付きでmap演算子を使用
numbers map multiply(10) >> multiplied
"引数付きmap演算子のテスト: " + multiplied |> print

// 引数付きfilter関数を定義
def greater_than(n) : int -> bool {
    🍕 > n >> 💩
}

// 引数付きでfilter演算子を使用
numbers filter greater_than(5) >> greater_than_five
"引数付きfilter演算子のテスト: " + greater_than_five |> print

// パイプラインの連鎖とmap/filterの組み合わせ
numbers filter is_even map multiply(100) >> complex_result
"複雑なパイプライン: " + complex_result |> print
