// このファイルは、型チェック機能のテスト用です
// 関数定義で型が指定された場合、🍕と💩の型チェックが行われます

// 整数を文字列に変換する関数（型チェックあり）
def pizza_to_string(): int -> str {
    🍕 |> to_string >> 💩
}

// 別の関数定義でテスト
def test_pizza_input(): str -> str {
    🍕 >> 💩  // str型のままreturnする関数
}

// 入力型チェックのテスト
// 整数を渡す（エラーになるはず）
42 |> test_pizza_input |> print  // 🍕の型が不正: 期待=str, 実際=int

// 文字列を渡す（正常に処理）
"hello" |> test_pizza_input |> print  // OK

// 戻り値が不正な関数
def int_to_bad(): int -> str {
    🍕 + 1 >> 💩  // 整数を返すが、戻り値型は文字列を期待
}

// 正しい入力でも戻り値型エラーになる
42 |> int_to_bad |> print  // 💩の型エラーになる

// 両方が正しい関数
def square(): int -> int {
    🍕 * 🍕 >> 💩
}

// 正しい型で実行
5 |> square |> print  // OK
