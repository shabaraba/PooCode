// Ultra minimal FizzBuzz solution

def fizzbuzz(n): int -> str {
    // Test divisibility
    n % 3 == 0 >> div_by_3
    n % 5 == 0 >> div_by_5
    
    // Case 1: Divisible by both 3 and 5
    div_by_3 == true && div_by_5 == true >> case_fizzbuzz
    "FizzBuzz" >> fizzbuzz_str
    
    // Case 2: Divisible by 3 only
    div_by_3 == true && div_by_5 == false >> case_fizz
    "Fizz" >> fizz_str
    
    // Case 3: Divisible by 5 only
    div_by_3 == false && div_by_5 == true >> case_buzz
    "Buzz" >> buzz_str
    
    // Case 4: Not divisible by 3 or 5
    div_by_3 == false && div_by_5 == false >> case_number
    n |> to_string >> number_str
    
    // Start with empty result
    "" >> result
    
    // Add the appropriate string to result
    case_fizzbuzz == true >> result_1
    fizzbuzz_str >> result_1
    case_fizzbuzz == true >> result = result_1
    
    case_fizz == true >> result_2
    fizz_str >> result_2
    case_fizz == true >> result = result_2
    
    case_buzz == true >> result_3
    buzz_str >> result_3
    case_buzz == true >> result = result_3
    
    case_number == true >> result_4
    number_str >> result_4
    case_number == true >> result = result_4
    
    // Return the final result
    result >> ðŸ’©
}

// Test all cases
"1:" |> print
1 |> fizzbuzz |> print

"3:" |> print
3 |> fizzbuzz |> print

"5:" |> print
5 |> fizzbuzz |> print 

"15:" |> print
15 |> fizzbuzz |> print

