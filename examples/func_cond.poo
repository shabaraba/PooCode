// 修正版: 条件分岐による関数オーバーロードのテスト
// パイプラインのデバッグ
def test(num) if 🍕 == 1 : int -> int {
    // 🍕が1の場合はこの関数が呼ばれる
    // numに🍕を加算して返す
    num + 🍕 >> 💩
}
def test(num): int -> int {
    // それ以外の場合はこの関数が呼ばれる
    // そのまま値を返す
    🍕 >> 💩 
}

// 関数を直接呼び出すテスト
"通常呼び出し: " |> print
test(1, 2) |> print  // 関数test(num)に1と2を渡して呼び出し

// テスト: 値を表示して確認する
"テスト1: " |> print
0 |> test(2) |> print  // 🍕は0なので下のtestが呼ばれて0が返るはず 

"テスト2: " |> print
1 |> test(2) |> print  // 🍕は1なので上のtestが呼ばれて3(=1+2)が返るはず
