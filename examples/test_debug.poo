def is_multiple_of(num): int -> bool {
    🍕 % num == 0 >> 💩
}

def fizzbuzz(num): int -> str {
    "" >> result
    
    // Show input value
    "Processing: " |> print
    num |> print
    
    🍕 is_multiple_of 3 >> is_multiple_of_3
    num is_multiple_of 5 >> is_multiple_of_5
    
    // Debug output for multiples
    "Is multiple of 3: " |> print
    is_multiple_of_3 |> print
    "Is multiple of 5: " |> print
    is_multiple_of_5 |> print
    
    is_multiple_of_3 && is_multiple_of_5 >> is_multiple_of_both
    
    // Debug output for both
    "Is multiple of both: " |> print
    is_multiple_of_both |> print
    
    is_multiple_of_both eq true >> is_fizzbuzz
    
    // Using eq false instead of not
    is_multiple_of_3 && (is_multiple_of_both eq false) >> is_fizz
    is_multiple_of_5 && (is_multiple_of_both eq false) >> is_buzz
    
    // Debug conditions
    "Is FizzBuzz: " |> print
    is_fizzbuzz |> print
    "Is Fizz: " |> print
    is_fizz |> print
    "Is Buzz: " |> print
    is_buzz |> print
    
    // Conditions for adding to result
    is_fizzbuzz eq true |> add "FizzBuzz" >> result
    is_fizz eq true |> add "Fizz" >> result
    is_buzz eq true |> add "Buzz" >> result
    
    // Using eq false instead of not
    (is_fizzbuzz eq false) && (is_fizz eq false) && (is_buzz eq false) |> add num |> to_string >> result
    
    // Debug final result
    "Final result: " |> print
    result |> print
    
    result >> 💩
}

// Test with specific numbers
1 |> fizzbuzz |> print
3 |> fizzbuzz |> print
5 |> fizzbuzz |> print
15 |> fizzbuzz |> print
